import express from "express";
import TourBooking from "../models/TourBooking.js"; // üí° Import model m·ªõi

const router = express.Router();

// -------------------------------------------------------------------
// T·∫†O BOOKING M·ªöI
// Endpoint: POST /api/bookings
// -------------------------------------------------------------------
router.post("/bookings", async (req, res, next) => {
    try {
        // 1. L·∫•y d·ªØ li·ªáu t·ª´ body c·ªßa request (g·ª≠i t·ª´ frontend)
        const { name, email, tour, guests, date } = req.body;

        // 2. Ki·ªÉm tra d·ªØ li·ªáu c∆° b·∫£n (Mongoose c≈©ng s·∫Ω validate)
        if (!name || !email || !tour || !date || !guests) {
            return res.status(400).json({ message: "Vui l√≤ng ƒëi·ªÅn ƒë·∫ßy ƒë·ªß th√¥ng tin b·∫Øt bu·ªôc." });
        }

        // 3. T·∫°o m·ªôt booking m·ªõi d·ª±a tr√™n Model
        const newBooking = new TourBooking({
            name,
            email,
            tour,
            guests,
            date
        });

        // 4. L∆∞u v√†o database
        const savedBooking = await newBooking.save();

        // 5. Tr·∫£ v·ªÅ th√¥ng b√°o th√†nh c√¥ng
        res.status(201).json({
            message: "ƒê·∫∑t tour th√†nh c√¥ng!",
            booking: savedBooking
        });

    } catch (err) {
        console.error("L·ªói khi t·∫°o booking:", err.stack);
        // B√°o l·ªói validation n·∫øu c√≥
        if (err.name === 'ValidationError') {
            return res.status(400).json({ message: "L·ªói Validation", errors: err.errors });
        }
        next(err);
    }
});

export default router;